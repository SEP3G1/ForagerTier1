@inherits LayoutComponentBase
@using ForagerTier1.Models
@using ForagerTier1.Persistance
@using System.Windows.Input
@using Syncfusion.Blazor.DropDowns;
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ISocketService SocketService
@inject IUserService UserService
@inject IRefreshService RefreshService


<div class="main">
    <div id="headNav" class="@(hidden ? "hidden" : "")">


        <!-- "HTML Datalist søgebar" -->
        <div id="sticky" class="searchCont ">
            <svg class="searchIcon" @onclick="@search" version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
                 viewBox="0 0 373.12 373.12" style="enable-background:new 0 0 373.12 373.12;" xml:space="preserve">
            <g>
            <g>
            <path d="M266.667,234.667h-16.96l-5.867-5.867c20.907-24.213,33.493-55.68,33.493-90.133C277.333,62.08,215.253,0,138.667,0
                         S0,62.08,0,138.667s62.08,138.667,138.667,138.667c34.453,0,65.92-12.587,90.133-33.387l5.867,5.867v16.853L341.333,373.12
                         l31.787-31.787L266.667,234.667z M138.667,234.667c-53.013,0-96-42.987-96-96c0-53.013,42.987-96,96-96c53.013,0,96,42.987,96,96
                         C234.667,191.68,191.68,234.667,138.667,234.667z" />















                 </g>
             </g>
         </svg>
            <SfComboBox TValue="string" TItem="Suggestion" CssClass="searchIndex" Placeholder="Search..." @onclick="@(e => search())"
                        DataSource="@DataForComboBox" @bind-Value="@valueComboBox" @onkeypress="@(e => KeyUp(e))" @onselect="@(e => clearSequenceNumberAndsearch())"
                        Autofill="true" AllowFiltering="true">
                <ComboBoxTemplates TItem="Suggestion">
                    <ItemTemplate>
                        <div>
                            <img class="suggestionImage" src="@((context as Suggestion).Image)" />
                            <div class="suggestionText"> @((context as Suggestion).Text) </div>
                        </div>
                    </ItemTemplate>
                </ComboBoxTemplates>
                <ComboBoxFieldSettings Text="Text"></ComboBoxFieldSettings>
            </SfComboBox>
            <button @onclick="@GetNextSequence">Load more Listings</button>
        </div>


        <div id="header" class="headCont">
            <AuthorizeView>
                <Authorized>
                    @if (user != null)
                    {
                    <RadzenMenu>
                        <RadzenMenuItem Text="@user.Name" Icon="account_box">
                            <RadzenMenuItem Text="Add Company" Path="addcompany" Icon="tab"></RadzenMenuItem>
                        </RadzenMenuItem>
                    </RadzenMenu>
                    }
                    <a class="login" @onclick="@logout">Logout</a>
                </Authorized>
            </AuthorizeView>
            <button class="navButton"><a href="find">buy</a></button>
            <a href="/"><div class="logo">forager<span>.</span></div></a>
            <button class="navButton"><a href="sell">sell</a></button>
            <AuthorizeView>
                <NotAuthorized>
                    <a class="login" @onclick="@login">Login</a>
                </NotAuthorized>
            </AuthorizeView>
        </div>
    </div>

    <!-- "Syncfusion søgebar" -->
    <div class="content">
        
    <CascadingValue Value=EventName>
        @Body
        </CascadingValue>
    </div>
    <div class="footer">

    </div>
</div>




@code{
    bool hidden = false;
    string valueComboBox = "";

    [Parameter]
    public int SequenceNumber { get; set; }

    User user;

    // For ComboBox dropdown
    private IList<Listing> listings;
    public Dictionary<string, string> suggestionListForComboBox;
    List<Suggestion> DataForComboBox;

    //EventCallback EventName => EventCallback.Factory.Create(this, GetNextSequence);

    //To make sure you only create this object once, you can use the following:
    EventCallback _eventName = EventCallback.Empty;
    EventCallback EventName
    {
        get
        {
            if (_eventName.Equals(EventCallback.Empty))
                _eventName = EventCallback.Factory.Create(this, GetNextSequence);
            return _eventName;
        }
    }

    //Det er det her jeg prøver på: https://stackoverflow.com/questions/58123063/call-method-in-mainlayout-from-a-page-component-in-blazor

    protected override async Task OnParametersSetAsync()
    {
        if (user == null)
        {
            user = ((CustomAuthenticationStateProvider)AuthenticationStateProvider).GetCashedUser();
        }
        //Console.WriteLine(user.ToString());
        if (NavigationManager.Uri.Split('/').ToList<string>()[3].Equals("listing"))
        {
            hidden = true;
        }
        else
        {
            hidden = false;
        }

        // valueComboBox = "";
    }

    public void GetNextSequence()
    {
        SequenceNumber += 2;
        Console.WriteLine("in GetNextSequence() where SequenceNumber = " + SequenceNumber);
        //search();
        NavigationManager.NavigateTo("/find/" + valueComboBox + "/" + SequenceNumber);
    }

    public void clearSequenceNumberAndsearch()
    {
        search();
    }

    public void search()
    {


        if (listings == null)
        {
            // For ComboBox dropdown

            listings = ((SearchQuery)SocketService.Search(null)).Listings; // Get listings
            suggestionListForComboBox = new Dictionary<string, string>();
            DataForComboBox = new List<Suggestion>();

            SocketService.GetProductCategories().ForEach(p
            => suggestionListForComboBox.Add(p, "https://foodion.net/images/app/foodion_logo_square.png"));

            Dictionary<string, string> productDictionary = new Dictionary<string, string>();

            foreach (Listing l in listings){
                productDictionary.Add(l.Product.Name, l.getCover());}

            productDictionary.Distinct().ToList().ForEach(p => suggestionListForComboBox.Add(p.Key, p.Value));

            listings.Select(l => l.Postcode).Distinct().ToList().ForEach(p
            => suggestionListForComboBox.Add(p, "https://img.icons8.com/ios/452/zip-code.png"));

            suggestionListForComboBox.ToList().ForEach(s
            => DataForComboBox.Add(new Suggestion() { Text = s.Key, Image = s.Value }));
        }
        if(suggestionListForComboBox.Keys.Contains(valueComboBox))
        {
            SequenceNumber = 0; //hack #patrick
            //NavigationManager.NavigateTo("/"); //hack #patrick try this i stedet: https://stackoverflow.com/questions/55775060/blazor-component-refresh-parent-when-model-is-updated-from-child-component
            RefreshService.CallRequestRefresh();

            valueComboBox = UppercaseFirst(valueComboBox.Trim());
            NavigationManager.NavigateTo("/find/" + valueComboBox + "/" + SequenceNumber);
        }
    }

    void KeyUp(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            search();
        }
    }

    public void login()
    {
        NavigationManager.NavigateTo("/Login");
    }
    public void logout()
    {
        ((CustomAuthenticationStateProvider)AuthenticationStateProvider).Logout();
    }

    static string UppercaseFirst(string s)
    {
        // Check for empty string.
        if (string.IsNullOrEmpty(s))
        {
            return string.Empty;
        }
        // Return char and concat substring.
        return char.ToUpper(s[0]) + s.Substring(1);
    }


    public class Suggestion
    {
        public string Text { get; set; }
        public string Image { get; set; }
    }
}

