@page "/editcompany"
@page "/editcompany/{id}"
@using ForagerTier1.Models
@using ForagerTier1.Persistance
@inject IJSRuntime JSRuntime;
@inject ICompanyService companyService
@inject NavigationManager NavigationManager


<AuthorizeView>
    <NotAuthorized>
        <Login />
    </NotAuthorized>
    <Authorized Context="Auth">
        <div>
            <EditForm class="sellCont" Context="Listing" Model="@company" OnValidSubmit="SaveChanges">
                <h1>Edit company<span class="acc">.</span></h1>
                <h3 style="width: 100%;">Edit your company in the form below</h3>
                <div class="sellColum">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <div class="form-group">
                        <p>Cvr</p>
                        <RadzenTextBox @bind-Value=@company.Cvr />
                    </div>

                    <div class="form-group">
                        <p>Name</p>
                        <RadzenTextBox @bind-Value=@company.Name />
                    </div>

                    <div class="form-group">
                        <p>Address</p>
                        <RadzenTextBox @bind-Value=@company.Address />
                    </div>

                </div>
                <div class="sellColum">
                    <div class="form-group">
                        <p>Postcode</p>
                        <RadzenTextBox @bind-Value=@company.PostCode />
                    </div>
                    <div class="form-group">
                        <RadzenTemplateForm TItem="Company" Data=@company>
                            <p>ConnectionAddress</p>
                            <RadzenMask Mask="***.***.***.***" Pattern="[^0-9]" Placeholder="000.000.000.000" Name="ConnectionAddress" @bind-Value=@company.ConnectionAddress />
                        </RadzenTemplateForm>
                    </div>

                    <div class="form-group">
                        <button type="submit" class="btn btn-success">Save changes</button>
                    </div>
                </div>
            </EditForm>
        </div>
    </Authorized>
</AuthorizeView>


@code {
    [Parameter]
    public string id { get; set; }
    Company company;

    protected override async Task OnParametersSetAsync()
    {
        CompanyService companyService = new CompanyService();
        company = (Company)companyService.GetCompany(id);
        await JSRuntime.InvokeVoidAsync("setTitle", "forager. | " + company.Name);
    }

    public void SaveChanges()
    {
        companyService.UpdateCompany(company);
        NavigationManager.NavigateTo("/company/" + id);
    }

}
